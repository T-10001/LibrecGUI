# set data directory
dfs.data.dir=data
# set result directory
# recommender result will output in this folder
dfs.result.dir=result

# convertor
# load data and splitting data 
# into two (or three) set
# setting dataset name
 data.input.path=filmtrust/rating
; data.input.path=movielens/ml-latest-small/

## setting dataset format(UIR, UIRT) ##
# user-rank-item
data.column.format=UIR

# for user-item-rank-date
; data.column.format=UIRT

# setting method of split data
# value can be ratio, loocv, given, KCV
data.model.splitter=ratio

#data.splitter.cv.number=5
# using rating to split dataset
data.splitter.ratio=rating

# filmtrust dataset is saved by text
# text, arff is accepted
data.model.format=text

# arff format
; data.model.format=arff

# the ratio of trainset
# this value should in (0,1)
data.splitter.trainset.ratio=0.8

# Detailed configuration of loocv, given, KCV 
# is written in User Guide 

# set the random seed for reproducing the results (split data, init parameters and other methods using random)
# default is set 1l
# if do not set ,just use System.currentTimeMillis() as the seed and could not reproduce the results.
rec.random.seed=1

# binarize threshold mainly used in ranking
# -1.0 - maxRate, binarize rate into -1.0 and 1.0
# binThold = -1.0， do nothing
# binThold = value, rating > value is changed to 1.0 other is 0.0, mainly used in ranking
# for PGM 0.0 maybe a better choose
data.convert.binarize.threshold=-1.0

# evaluation the result or not
rec.eval.enable=true

# specifies evaluators
# rec.eval.classes=auc,precision,recall...
# if rec.eval.class is blank 
# every evaluator will be calculated
# rec.eval.classes=auc,precision,recall
;rec.eval.classes=diversity,arhr,hitrate,idcg
;rec.eval.classes=arhr,idcg,diversity

# evaluator value set is written in User Guide
# if this algorithm is ranking only true or false
; rec.recommender.isranking=false

#can use user,item,social similarity, default value is user, maximum values:user,item,social
#rec.recommender.similarities=user


#########################
#### ALGORITHMS LIST ####
#########################

##################
#### Baseline #### TRUE OR FLASE ITEMRANKING?
##################


; constant guess Recommender
; rec.recommender.class=constantguess
; rec.recommender.isranking=true


; GlobalAverageRecommender
; rec.recommender.class=globalaverage
; rec.recommender.isranking=true


; ItemAverageRecommender
; rec.recommender.class=itemaverage
; rec.recommender.isranking=true


; ItemClusterRecommender
; rec.recommender.class=itemcluster
; rec.pgm.number=10
; rec.iterator.maximum=20
; rec.recommender.isranking=true


; MostPopular Recommender
; rec.recommender.class=mostpopular
; rec.recommender.isranking=true


; RandomGuess Recommender
; rec.recommender.class=randomguess
; rec.recommender.isranking=true


; UserAverage Recommender
; rec.recommender.class=useraverage
; rec.recommender.isranking=true


; UserCluster Recommender
; rec.recommender.class=usercluster
; rec.factory.number=10
; rec.iterator.maximum=20
; rec.recommender.isranking=true


################################################
#### Collaborative Filtering (item ranking) ####
################################################

## AOBPR Recommender ##
; rec.recommender.class=aobpr
; rec.item.distribution.parameter = 500
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10


## AspectModel Recommender ##
; rec.recommender.class=aspectmodelranking
; rec.iterator.maximum=20
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10
; data.splitter.cv.number=5
; rec.pgm.burnin=10
; rec.pgm.samplelag=10
; rec.topic.number=10


## BPR Recommender ## UP TO HERE
; rec.recommender.class=bpr
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnRate.bolddriver=false
; rec.learnRate.decay=1.0
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10


## CLIMF Recommender ## THIS DOESN WORK FOR MOVIELENS
; rec.recommender.class=climf
; rec.iterator.learnrate=0.001
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10


## EALS Recommender ##
; rec.recommender.class=eals
; rec.iterator.maximum=10
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10

; # 0：eALS MF; 1：WRMF; 2: both
; rec.eals.wrmf.judge=1

; # the overall weight of missing data c0
; rec.eals.overall=128

; # the significance level of popular items over un-popular ones
; rec.eals.ratio=0.4

; # confidence weight coefficient, alpha in original paper
; rec.wrmf.weight.coefficient=4.0


## FISMauc Recommender ##
; rec.recommender.class=fismauc
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=10
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10
; rec.fismauc.rho=2
; rec.fismauc.alpha=1.5


## FISMrmse Recommender ##
; rec.recommender.class=fismrmse
; rec.iteration.learnrate=0.01
; rec.iterator.maximum=100
; rec.recommender.isranking=true
; rec.fismrmse.rho=1
; rec.fismrmse.alpha=1.5


## GBPR Recommender ##
; rec.recommender.class=gbpr
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10


## ItemBigram Recommender ## THIS  DOESNT WORK
; rec.recommender.class=itembigram
; data.column.format=UIRT
; data.input.path=test/ratings-date.txt
; rec.iterator.maximum=100
; rec.topic.number=10
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10
; rec.user.dirichlet.prior=0.01
; rec.topic.dirichlet.prior=0.01
; rec.pgm.burnin=10
; rec.pgm.samplelag=10


## LDA Recommender ##
; rec.recommender.class=lda
; rec.iterator.maximum=100
; rec.topic.number = 10
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10
; rec.user.dirichlet.prior=0.01
; rec.topic.dirichlet.prior=0.01
; rec.pgm.burnin=10
; rec.pgm.samplelag=10
; data.splitter.cv.number=5
; # (0.0 may be a better choose than -1.0)
; data.convert.binarize.threshold=0.0


## ListRankMF Recommender ##
; rec.recommender.class=listrankmf
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10


## PLSA Recommender ##
; rec.recommender.class=plsa
; rec.iteration.learnrate=0.01
; rec.iterator.maximum=100
; rec.recommender.isranking=true
; rec.topic.number = 10
; rec.recommender.ranking.topn=10
; # (0.0 may be a better choose than -1.0)
; data.convert.binarize.threshold=0.0


## RankALS Recommender ##  TOOK 20mins with MOVIELENS
; rec.recommender.class=rankals
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10
; rec.rankals.support.weight=true


## RankSGD Recommender ##
; rec.recommender.class=ranksgd
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=30
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10


## SLIM Recommender ## TOOK VERY LONG FOR MOVIELENS 1hr 40mins
; rec.recommender.class=slim
; rec.similarity.class=cos
; # can only use item similarity
; rec.recommender.similarities=item
; rec.iterator.maximum=40
; rec.similarity.shrinkage=10
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10
; rec.neighbors.knn.number=50
; rec.recommender.earlystop=true
; rec.slim.regularization.l1=1
; rec.slim.regularization.l2=5


## WBPR Recommender ##
; rec.recommender.class=wbpr
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=10
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.bias.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10


## WRMF Recommender ##
; rec.recommender.class=wrmf
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=20
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10
; # confidence weight coefficient, alpha in original paper
; rec.wrmf.weight.coefficient=4.0


#################################################
## Collaborative Filtering (rating prediction) ##
#################################################

## AspectModel Recommender ##
; rec.recommender.class=aspectmodelrating
; rec.iteration.learnrate=0.01
; rec.iterator.maximum=100
; rec.recommender.isranking=false


## ASVDPlusPlus Recommender ##
; rec.recommender.class=asvdpp
; rec.iteration.learnrate=0.01
; rec.iterator.maximum=20
; rec.recommender.isranking=false


## BiasedMF Recommender ##
; rec.recommender.class=biasedmf
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=1
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.bias.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false


## BPMF Recommender ##
; rec.recommender.class=bpmf
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false


## BPoissMF Recommender ##
; rec.recommender.class=bpoissmf
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false


## FMALS Recommender ## ONLY FOR TESTING
; data.input.path=test/arfftest/data.arff
; data.column.format=UIR
; data.model.splitter=ratio
; data.convertor.format=arff
; data.model.format=arff
; rec.recommender.class=fmals
; rec.iterator.learnRate=0.01
; rec.iterator.maximum=100
; rec.factor.number=10
; rec.recommender.isranking=false


## FMSGD Recommender ## ONLY FOR TESTING
; data.input.path=test/arfftest/data.arff
; data.column.format=UIR
; data.model.splitter=ratio
; data.convertor.format=arff
; data.model.format=arff
; rec.recommender.class=fmsgd
; rec.iterator.learnRate=0.001
; rec.iterator.maximum=100
; rec.factor.number=10
; rec.recommender.isranking=false


## GPLSA Recommender ##
; rec.recommender.class=gplsa
; rec.iteration.learnrate=0.01
; rec.iterator.maximum=100
; rec.recommender.smoothWeight=2
; rec.recommender.isranking=false
; rec.topic.number = 10
; rec.recommender.isranking=false


## LDCC Recommender ##
; rec.recommender.class=ldcc
; rec.iteration.learnrate=0.01
; rec.iterator.maximum=100
; rec.recommender.isranking=false


## LLORMA Recommender ##
; rec.recommender.class=llorma
; rec.llorma.global.factors.num = 10
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false


## MFALS Recommender ##
; rec.recommender.class=mfals
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false


## NMF Recommender ##
; rec.recommender.class=nmf
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false

## PMF Recommender ##
; rec.recommender.class=pmf
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=50
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false


## RBM Recommender ##
; rec.recommender.class=rbm
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false


## RFRec Recommender ## RAN OUT OF MEMORY FOR MOVIELENS
; rec.recommender.class=rfrec
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false


## SVDPlusPlus Recommender ##
; rec.recommender.class=svdpp
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=13
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.impItem.regularization=0.001
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false

## URP Recommender ##
; rec.recommender.class=urp
; rec.iteration.learnrate=0.01
; rec.iterator.maximum=100
; rec.recommender.isranking=false

######################################################################
#### Collaborative Filtering (rating prediction and item ranking) ####
######################################################################

## BHFree Recommender ## ITEM RANKING TRUE DOESN"T WORK
; rec.recommender.class=bhfree
; rec.pgm.burnin=10
; rec.pgm.samplelag=10
; rec.iterator.maximum=100
; # true for item ranking, false for rating prediction
; rec.recommender.isranking=false
; rec.recommender.ranking.topn=10


## BUCM Recommender ##
; rec.recommender.class=bucm
; rec.pgm.burnin=10
; rec.pgm.samplelag=10
; rec.iterator.maximum=100
; rec.pgm.topic.number=10
; rec.bucm.alpha=0.01
; rec.bucm.beta=0.01
; rec.bucm.gamma=0.01
; # true for item ranking, false for rating prediction
; rec.recommender.isranking=false
; rec.recommender.ranking.topn=10


## ItemKNN Recommender ##
; rec.recommender.class=itemknn
; rec.recommender.ranking.topn=10
; rec.recommender.similarities=item
; rec.similarity.class=pcc
; rec.neighbors.knn.number=50
; rec.similarity.shrinkage=10
; # true for item ranking, false for rating prediction
; rec.recommender.isranking=false


## UserKNN Recommender ##
; rec.similarity.class=pcc
; rec.neighbors.knn.number=50
; rec.recommender.class=userknn
; rec.recommender.similarities=user
; # true for item ranking, false for rating prediction
; rec.recommender.isranking=false
; rec.recommender.ranking.topn=10
; rec.filter.class=generic
; rec.similarity.shrinkage=10


#################
#### Content ####
#################

## EFM Recommender ## THIS DOESNT WORK
; data.input.path=test/efmtest/efm.txt
; rec.recommender.class=efm
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.lambda.user=0.05
; rec.recommender.lambda.item=0.05
; rec.bias.regularization = 0.01
; rec.recommender.isranking=false


## HFT Recommender ## THIS DOESN'T WORK ClassCastException
; data.input.path=test/hfttest/hft.txt/
; rec.recommender.class=hft
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=2
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.eval.enable = 1
; rec.recommender.lambda.user=0.05
; rec.recommender.lambda.item=0.05
; rec.bias.regularization = 0.01
; rec.recommender.isranking=false


###############################
#### Context(item ranking) ####
###############################

## SBPR Recommender ##
; data.appender.class=social
; data.appender.path=test/test-append-dir
; rec.recommender.class=sbpr
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=200
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.social.regularization=0.01
; rec.bias.regularization=0.01
; rec.factor.number=128
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.earlystop=false
; rec.recommender.verbose=true
; rec.recommender.isranking=true
; rec.recommender.ranking.topn=10


####################################
#### Context(rating prediction) ####
####################################

## BPTF Recommender ## THIS DOESN'T EXIST
; rec.recommender.class=bptf
; rec.iteration.learnrate=0.01
; rec.iterator.maximum=100
; rec.recommender.isranking=false


## PITF Recommender ## THIS DOESN"T EXIST
rec.recommender.class=pitf
rec.iteration.learnrate=0.01
rec.iterator.maximum=100
rec.recommender.isranking=false


## RSTE Recommender ##
; data.appender.class=social
; data.appender.path=test/test-append-dir
; rec.recommender.class=rste
; rec.iterator.learnrate=0.05
; rec.iterator.learnrate.maximum=0.05
; rec.iterator.maximum=200
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.social.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.earlystop=false
; rec.recommender.verbose=true
; rec.user.social.ratio=0.8
; rec.recommender.isranking=false


## SocialMF Recommender ##
; data.appender.class=social
; data.appender.path=test/test-append-dir
; rec.recommender.class=socialmf
; rec.iterator.learnrate=0.05
; rec.iterator.learnrate.maximum=0.05
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.social.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.earlystop=false
; rec.recommender.verbose=true
; rec.recommender.isranking=false


## SoRec Recommender ##
; data.appender.class=social
; data.appender.path=test/test-append-dir
; rec.recommender.class=sorec
; rec.iterator.learnrate=0.05
; rec.iterator.learnrate.maximum=0.05
; rec.iterator.maximum=1000
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.rate.social.regularization=0.01
; rec.user.social.regularization=0.01
; rec.social.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.earlystop=false
; rec.recommender.verbose=true
; rec.recommender.isranking=false


## SoReg Recommender ##
; data.appender.class=social
; data.appender.path=test/test-append-dir
; rec.recommender.class=soreg
; rec.recommender.similarities=social
; rec.similarity.class=pcc
; rec.iterator.learnrate=0.001
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=10
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.social.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.earlystop=false
; rec.recommender.verbose=true
; rec.similarity.shrinkage=10
; rec.recommender.isranking=false


## TimeSVD Recommender ##
; rec.recommender.class=timesvd
; data.column.format=UIRT
; #data.input.path=test/ratings-date.txt
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=100
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.learnrate.decay=1.0
; rec.recommender.isranking=false


## TrustMF Recommender ##
; data.appender.class=social
; data.appender.path=test/test-append-dir
; rec.recommender.class=trustmf
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=30
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.social.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.earlystop=false
; rec.recommender.verbose=true
; rec.social.model=T
; rec.recommender.isranking=false


## TrustSVD Recommender ##
; data.appender.class=social
; data.appender.path=test/test-append-dir
; rec.recommender.class=trustsvd
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=50
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.social.regularization=0.01
; rec.bias.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.recommender.earlystop=false
; rec.recommender.verbose=true
; rec.recommender.isranking=false

###############
#### Extra ####
###############

## AssociationRule Recommender ##
; rec.recommender.class=associationrule
; rec.recommender.isranking=false


## External Recommender ##
; rec.recommender.class=external
; rec.recommender.isranking=false


## PersonalityDiagnosis Recommender ##
; rec.recommender.class=personalitydiagnosis
; rec.PersonalityDiagnosis.sigma=0.1
; rec.recommender.isranking=false


 ## PRankD Recommender ##
; rec.recommender.class=prankd
; rec.similarity.class=cos
; rec.recommender.similarities=item
; rec.similarity.shrinkage=10
; rec.iterator.learnrate=0.01
; rec.iterator.learnrate.maximum=0.01
; rec.iterator.maximum=50
; rec.user.regularization=0.01
; rec.item.regularization=0.01
; rec.factor.number=10
; rec.learnrate.bolddriver=false
; rec.learnrate.decay=1.0
; rec.sim.filter=4.0
; rec.recommender.isranking=false


## SlopeOne Recommender ##
; rec.recommender.class=slopeone,constantguess,prankd,pmf,popular,aobpr,sbpr,hybrid
; rec.eval.enable=true
; rec.iterator.maximum=50
; rec.factory.number=30
; rec.iterator.learn.rate=0.001
; rec.recommender.lambda.user=0.05
; rec.recommender.lambda.item=0.05
; rec.recommender.isranking=false

################
#### Hybrid ####
################

## Hybrid Recommender ##
; rec.recommender.class=hybrid
; rec.hybrid.lambda=0.1
; rec.iterator.maximum=50
; rec.factory.number=30
; rec.iterator.learn.rate=0.001
; rec.recommender.lambda.user=0.05
; rec.recommender.lambda.item=0.05
; rec.recommender.isranking=false

## completed for filmtrust YAY!!!
